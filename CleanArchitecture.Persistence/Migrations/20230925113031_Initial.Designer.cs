// <auto-generated />
using System;
using CleanArchitecture.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CleanArchitecture.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230925113031_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CleanArchitecture.Domain.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Library.Books", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Programming",
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2023, 9, 25, 14, 30, 31, 512, DateTimeKind.Local).AddTicks(5319),
                            Description = "Lean OOP inside C#",
                            IsActive = true,
                            Title = "OOP C#",
                            UpdatedBy = 0,
                            UpdatedDate = new DateTime(2023, 9, 25, 14, 30, 31, 512, DateTimeKind.Local).AddTicks(5374)
                        },
                        new
                        {
                            Id = 2,
                            Category = "Programming",
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2023, 9, 25, 14, 30, 31, 512, DateTimeKind.Local).AddTicks(5381),
                            Description = "Lean Rust Programming",
                            IsActive = true,
                            Title = "Rust",
                            UpdatedBy = 0,
                            UpdatedDate = new DateTime(2023, 9, 25, 14, 30, 31, 512, DateTimeKind.Local).AddTicks(5383)
                        },
                        new
                        {
                            Id = 3,
                            Category = "Mobile",
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2023, 9, 25, 14, 30, 31, 512, DateTimeKind.Local).AddTicks(5386),
                            Description = "Lean Android Programming",
                            IsActive = true,
                            Title = "Android",
                            UpdatedBy = 0,
                            UpdatedDate = new DateTime(2023, 9, 25, 14, 30, 31, 512, DateTimeKind.Local).AddTicks(5389)
                        },
                        new
                        {
                            Id = 4,
                            Category = "Mobile",
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2023, 9, 25, 14, 30, 31, 512, DateTimeKind.Local).AddTicks(5392),
                            Description = "Lean Flutter Programming",
                            IsActive = true,
                            Title = "Flutter",
                            UpdatedBy = 0,
                            UpdatedDate = new DateTime(2023, 9, 25, 14, 30, 31, 512, DateTimeKind.Local).AddTicks(5394)
                        },
                        new
                        {
                            Id = 5,
                            Category = "Desktop",
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2023, 9, 25, 14, 30, 31, 512, DateTimeKind.Local).AddTicks(5397),
                            Description = "Lean DevExpress For Desktop Apps",
                            IsActive = false,
                            Title = "DevExpress",
                            UpdatedBy = 0,
                            UpdatedDate = new DateTime(2023, 9, 25, 14, 30, 31, 512, DateTimeKind.Local).AddTicks(5399)
                        },
                        new
                        {
                            Id = 6,
                            Category = "DataAccess",
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2023, 9, 25, 14, 30, 31, 512, DateTimeKind.Local).AddTicks(5406),
                            Description = "Lean EntityFrameworkCore",
                            IsActive = false,
                            Title = "EntityFrameworkCore",
                            UpdatedBy = 0,
                            UpdatedDate = new DateTime(2023, 9, 25, 14, 30, 31, 512, DateTimeKind.Local).AddTicks(5408)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
